Nome: Gabrielli Danker e Marco Antonio

a) Utilizar (pegar pronto ou popular) um banco de dados no MySql ou no SQLite com muitos registros (mais do que 30.000)
b) Aplicar alguma otimização X, dentre as possíveis
c) Verificar se há impacto no tempo de respostas da operações (select, insert, procedimento armazenado ou outro)
d) Se houver impacto, relatá-lo, caracterizando o cenário do teste realizado e concluir a tarefa.
e) Se não houver impacto, escolher outra otimização (variar o X) e retornar ao passo c)

SCRIPTS:

/*SELECT não otimizado*/
SELECT * FROM students 
WHERE "Blood Type" = 'O' 
AND Age > '20.0';
Run Time: real 3.166 user 0.261159 sys 0.515541

/*Criando INDEX para acelerar busca*/
CREATE INDEX idx_bloodtype ON students ("Blood Type");
CREATE INDEX idx_age ON students (Age);

/*SELECT otimizado*/
SELECT "Blood Type", Age 
FROM students  
WHERE "Blood Type"  = 'O' 
AND Age > '20.0';
Run Time: real 1.964 user 0.185392 sys 0.639452

/*SELECT otimizado 2° opção*/
SELECT "Blood Type", Age FROM students  WHERE Age > '20.0' AND "Blood Type"  = 'O';
Run Time: real 1.871 user 0.187806 sys 0.617071

OBS:. Utilizamos o SQLite3. Criamos o banco de dados 'Gabi' com a tabela 'students'. Prints dos SCRIPtS estão na pasta 'SELECT'.
